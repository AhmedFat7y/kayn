!function(e,r){if("function"==typeof define&&define.amd)define("kindred-api",["module","request","chalk"],r);else if("undefined"!=typeof exports)r(module,require("request"),require("chalk"));else{var n={exports:{}};r(n,e.request,e.chalk),e.kindredApi=n.exports}}(this,function(e,r,n){"use strict";function t(e,r){if(!(e instanceof r))throw new TypeError("Cannot call a class as a function")}var i=function(){function e(e,r){for(var n=0;n<r.length;n++){var t=r[n];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(e,t.key,t)}}return function(r,n,t){return n&&e(r.prototype,n),t&&e(r,t),r}}(),o={BRAZIL:"BR1",EUROPE:"EUN1",EUROPE_WEST:"EUW1",KOREA:"KR",LATIN_AMERICA_NORTH:"LA1",LATIN_AMERICA_SOUTH:"LA2",NORTH_AMERICA:"NA1",OCEANIA:"OC1",RUSSIA:"RU",TURKEY:"TR1",JAPAN:"JP1"},s={BRAZIL:"br",EUROPE:"eune",EUROPE_WEST:"euw",KOREA:"kr",LATIN_AMERICA_NORTH:"lan",LATIN_AMERICA_SOUTH:"las",NORTH_AMERICA:"na",OCEANIA:"oce",RUSSIA:"ru",TURKEY:"tr",JAPAN:"jp"},a={br:"BRAZIL",eune:"EUROPE",euw:"EUROPE_WEST",kr:"KOREA",lan:"LATIN_AMERICA_NORTH",las:"LATIN_AMERICA_SOUTH",na:"NORTH_AMERICA",oce:"OCEANIA",ru:"RUSSIA",tr:"TURKEY",jp:"JAPAN"},u={CHAMPION:1.2,CURRENT_GAME:1,FEATURED_GAMES:1,GAME:1.3,LEAGUE:2.5,STATIC_DATA:1.2,STATUS:1,MATCH:2.2,MATCH_LIST:2.2,RUNES_MASTERIES:1.4,STATS:1.3,SUMMONER:1.4},g={int:function(e){return e.every(function(e){return Number.isInteger(e)})},string:function(e){return e.every(function(e){return"string"==typeof e})}},l={int:function(e){return e&&Array.isArray(e)&&g.int(e)&&e.length>0},string:function(e){return e&&Array.isArray(e)&&g.string(e)&&e.length>0}},d=function(){function e(r){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:s.NORTH_AMERICA;t(this,e),this.key=r,this.defaultRegion=n}return i(e,[{key:"_sanitizeName",value:function(e){return e.replace(/\s/g,"").toLowerCase()}},{key:"_makeUrl",value:function(e,r,n,t,i){var o=n?"":r+"/";return"https://"+r+".api.riotgames.com/"+(t||i?i?"":"lol/status/":"api/lol/"+o)+e+"?api_key="+this.key}},{key:"_baseRequest",value:function(e,t){var i=e.url,o=e.region,s=void 0===o?this.defaultRegion:o,a=e.status,u=void 0!==a&&a,g=e.observerMode,l=void 0!==g&&g,d=e.staticReq,m=void 0!==d&&d,v=e.options,h=void 0===v?{}:v,c=m?"global":s,R=this._makeUrl(i,c,m,u,l);console.log(R),t||console.log(n.red("error: No callback passed in for the method call regarding `"+n.yellow(R)+"`")),r({url:R,qs:h},function(e,r,i){var o=void 0,s=r.statusCode;return s>=200&&s<300?o=n.green(s):s>=400&&s<500?o=n.red(s):s>=500&&(o=n.bold.red(s)),console.log("status code:",r&&o),e?t(e):t(e,JSON.parse(i))})}},{key:"_observerRequest",value:function(e,r){var n=e.endUrl,t=e.region;return this._baseRequest({url:"observer-mode/rest/"+n,observerMode:!0,region:t},r)}},{key:"_currentGameRequest",value:function(e,r){var n=e.endUrl,t=e.region,i=e.platformId;return this._observerRequest({endUrl:"consumer/getSpectatorGameInfo/"+i+"/"+n,region:t},r)}},{key:"_staticRequest",value:function(e,r){var n=e.endUrl,t=e.region,i=void 0===t?this.defaultRegion:t,o=e.options;return this._baseRequest({url:"static-data/"+i+"/v"+u.STATIC_DATA+"/"+n,staticReq:!0,region:i,options:o},r)}},{key:"_gameRequest",value:function(e,r){var n=e.endUrl,t=e.region;return this._baseRequest({url:"v"+u.GAME+"/game/"+n,region:t},r)}},{key:"_leagueRequest",value:function(e,r){var n=e.endUrl,t=e.region,i=e.options;return this._baseRequest({url:"v"+u.LEAGUE+"/league/"+n,region:t,options:i},r)}},{key:"_statusRequest",value:function(e,r){var n=e.endUrl,t=e.region;return this._baseRequest({url:"v"+u.STATUS+"/"+n,region:t,status:!0},r)}},{key:"_matchRequest",value:function(e,r){var n=e.endUrl,t=e.region,i=e.options;return this._baseRequest({url:"v"+u.MATCH+"/match/"+n,region:t,options:i},r)}},{key:"_matchListRequest",value:function(e,r){var n=e.endUrl,t=e.region,i=e.options;return this._baseRequest({url:"v"+u.MATCH_LIST+"/matchlist/by-summoner/"+n,region:t,options:i},r)}},{key:"_runesMasteriesRequest",value:function(e,r){var n=e.endUrl,t=e.region;return this._summonerRequest({endUrl:n,region:t},r)}},{key:"_statsRequest",value:function(e,r){var n=e.endUrl,t=e.region,i=e.options;return this._baseRequest({url:"v"+u.STATS+"/stats/by-summoner/"+n,region:t,options:i},r)}},{key:"_summonerRequest",value:function(e,r){var n=e.endUrl,t=e.region;return this._baseRequest({url:"v"+u.SUMMONER+"/summoner/"+n,region:t},r)}},{key:"_logError",value:function(e,r){console.log(n.bold.yellow(e),n.red("request"),n.bold.red("FAILED")+n.red("; "+r))}},{key:"setRegion",value:function(e){this.defaultRegion=e}},{key:"getCurrentGame",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},r=e.region,t=void 0===r?this.defaultRegion:r,i=e.id,s=arguments[1];if(!i||!Number.isInteger(i))return this._logError(this.getCurrentGame.name,"required params "+n.yellow("`id` (int)")+" not passed in");var u=o[a[t]];return this._currentGameRequest({endUrl:""+i,platformId:u,region:t},s)}},{key:"getFeaturedGames",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},r=e.region,n=arguments[1];return this._observerRequest({endUrl:"featured",region:r},n=r?n:arguments[0])}},{key:"getRecentGames",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},r=e.region,t=e.id,i=arguments[1];return t&&Number.isInteger(t)?this._gameRequest({endUrl:"by-summoner/"+t+"/recent",region:r},i):this._logError(this.getRecentGames.name,"required params "+n.yellow("`id` (int)")+" not passed in")}},{key:"getLeagues",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},r=e.region,n=e.ids,t=arguments[1];return l.int(n)?this._leagueRequest({endUrl:"by-summoner/"+n.join(","),region:r},t):Number.isInteger(n)?this._leagueRequest({endUrl:"by-summoner/"+n,region:r},t):void this._logError(this.getLeagues.name,"ids can be either an array of integers or a single integer")}},{key:"getLeagueEntries",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},r=e.region,n=e.ids,t=arguments[1];return l.int(n)?this._leagueRequest({endUrl:"by-summoner/"+n.join(",")+"/entry",region:r},t):Number.isInteger(n)?this._leagueRequest({endUrl:"by-summoner/"+n+"/entry",region:r},t):void this._logError(this.getLeagues.name,"ids can be either an array of integers or a single integer")}},{key:"getChallengers",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},r=e.region,n=e.options,t=void 0===n?{type:"RANKED_SOLO_5x5"}:n,i=arguments[1];return this._leagueRequest({endUrl:"challenger",region:r,options:t},i=r?i:arguments[0])}},{key:"getMasters",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},r=e.region,n=e.options,t=void 0===n?{type:"RANKED_SOLO_5x5"}:n,i=arguments[1];return this._leagueRequest({endUrl:"master",region:r,options:t},i)}},{key:"getSummoners",value:function(){var e=this,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=r.region,t=r.names,i=r.ids,o=arguments[1];return l.string(t)?this._summonerRequest({endUrl:"by-name/"+t.map(function(r){return e._sanitizeName(r)}).join(","),region:n},o):"string"==typeof t?this._summonerRequest({endUrl:"by-name/"+t,region:n},o):l.int(i)?this._summonerRequest({endUrl:""+i.join(","),region:n},o):Number.isInteger(i)?this._summonerRequest({endUrl:""+i,region:n},o):void this._logError(this.getSummoners.name,t||i?i?"ids can be either an array of integers or a single integer":"names can be either an array of strings or a single string":"required parameters not passed")}},{key:"getSummoner",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},r=e.region,t=e.name,i=e.id,o=arguments[1];return"string"==typeof t?this.getSummoners({region:r,names:[t]},o):Number.isInteger(i)?this.getSummoners({region:r,ids:[i]},o):this._logError(this.getSummoner.name,"required parameters "+n.yellow("`name` (string)")+" or "+n.yellow("`id` (int)")+" not passed in")}},{key:"getSummonerNames",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},r=e.region,n=e.ids,t=arguments[1];return Array.isArray(n)&&n.length>0?this._summonerRequest({endUrl:n.join(",")+"/name",region:r},t):Number.isInteger(n)?this._summonerRequest({endUrl:n+"/name",region:r},t):void this._logError(this.getSummonerNames.name,"ids can be either an array or a single integer")}},{key:"getRankedStats",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},r=e.region,t=e.id,i=e.options,o=arguments[1];return t&&Number.isInteger(t)?this._statsRequest({endUrl:t+"/ranked",region:r,options:i},o):this._logError(this.getRankedStats.name,"required params "+n.yellow("`id` (int)")+" not passed in")}},{key:"getShardStatus",value:function(e,r){var n=e.region;return this._statusRequest({endUrl:"shard",region:n},r=n?r:arguments[0])}},{key:"getShardList",value:function(e,r){var n=e.region;return this._statusRequest({endUrl:"shards",region:n},r=n?r:arguments[0])}},{key:"getMatch",value:function(e,r){var t=e.region,i=e.id,o=e.options,s=void 0===o?{includeTimeline:!0}:o;return i&&Number.isInteger(i)?this._matchRequest({endUrl:""+i,region:t,options:s},r):this._logError(this.getMatch.name,"required params "+n.yellow("`id` (int)")+" not passed in")}},{key:"getMatchList",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},r=e.region,t=e.id,i=e.options,o=void 0===i?{type:"RANKED_SOLO_5x5"}:i,s=arguments[1];return t&&Number.isInteger(t)?this._matchListRequest({endUrl:""+t,region:r,options:o},s):this._logError(this.getMatchList.name,"required params "+n.yellow("`id` (int)")+" not passed in")}},{key:"getChampionList",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},r=e.region,n=e.options,t=arguments[1];return this._staticRequest({endUrl:"champion",region:r,options:n},t=r||n?t:arguments[0])}},{key:"getChampion",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},r=e.region,t=e.id,i=e.options,o=arguments[1];return t&&Number.isInteger(t)?this._staticRequest({endUrl:"champion/"+t,region:r,options:i},o):this._logError(this.getChampion.name,"required params "+n.yellow("`id` (int)")+" not passed in")}},{key:"getItems",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},r=e.region,n=e.options,t=arguments[1];return this._staticRequest({endUrl:"item",region:r,options:n},t=r||n?t:arguments[0])}},{key:"getItem",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},r=e.region,t=e.id,i=e.options,o=arguments[1];return t&&Number.isInteger(t)?this._staticRequest({endUrl:"item/"+t,region:r,options:i},o):this._logError(this.getItem.name,"required params "+n.yellow("`id` (int)")+" not passed in")}},{key:"getLanguageStrings",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},r=e.region,n=e.options,t=arguments[1];return this._staticRequest({endUrl:"language-strings",region:r,options:n},t=r?t:arguments[0])}},{key:"getLanguages",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},r=e.region,n=arguments[1];return this._staticRequest({endUrl:"languages",region:r},n=r?n:arguments[0])}},{key:"getMap",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},r=e.region,n=e.options,t=arguments[1];return this._staticRequest({endUrl:"map",region:r,options:n},t=r||n?t:arguments[0])}},{key:"getMasteryList",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},r=e.region,n=e.options,t=arguments[1];return this._staticRequest({endUrl:"mastery",region:r,options:n},t=r||n?t:arguments[0])}},{key:"getMastery",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},r=e.region,t=e.id,i=e.options,o=arguments[1];return t&&Number.isInteger(t)?this._staticRequest({endUrl:"mastery/"+t,region:r,options:i},o):this._logError(this.getMastery.name,"required params "+n.yellow("`id` (int)")+" not passed in")}},{key:"getRealm",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},r=e.region,n=arguments[1];return this._staticRequest({endUrl:"realm",region:r},n=r?n:arguments[0])}},{key:"getRuneList",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},r=e.region,n=e.options,t=arguments[1];return this._staticRequest({endUrl:"rune",region:r,options:n},t=r||n?t:arguments[0])}},{key:"getRune",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},r=e.region,t=e.id,i=e.options,o=arguments[1];return t&&Number.isInteger(t)?this._staticRequest({endUrl:"rune/"+t,region:r,options:i},o):this._logError(this.getRune.name,"required params "+n.yellow("`id` (int)")+" not passed in")}},{key:"getSummonerSpellsList",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},r=e.region,n=e.options,t=arguments[1];return this._staticRequest({endUrl:"summoner-spell",region:r,options:n},t=r||n?t:arguments[0])}},{key:"getSummonerSpell",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},r=e.region,t=e.id,i=e.options,o=arguments[1];return t&&Number.isInteger(t)?this._staticRequest({endUrl:"summoner-spell/${id}",region:r,options:i},o):this._logError(this.getSummonerSpell.name,"required params "+n.yellow("`id` (int)")+" not passed in")}},{key:"getVersions",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},r=e.region,n=e.options,t=arguments[1];return this._staticRequest({endUrl:"versions",region:r,options:n},t=r||n?t:arguments[0])}},{key:"getRunes",value:function(){var e=this,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=r.region,i=r.ids,o=r.id,s=r.names,a=r.name,u=arguments[1];if(!(i||o||s||a))return this._logError(this.getRunes.name,"required params "+n.yellow("`ids` (array of ints)")+", "+n.yellow("`id` (int)")+", "+n.yellow("`names` (array of strings)")+", or "+n.yellow("`name` (string)")+" not passed in");var g=void 0;return l.int(i)&&(g=i.join(",")),Number.isInteger(i)&&(g=[i]),o&&!Number.isInteger(o)&&(g=[o]),l.string(s)?this.getSummoners({names:s,region:t},function(r,n){var i=[],o=!0,a=!1,g=void 0;try{for(var l,d=s[Symbol.iterator]();!(o=(l=d.next()).done);o=!0){var m=l.value;i.push(n[e._sanitizeName(m)].id)}}catch(e){a=!0,g=e}finally{try{!o&&d.return&&d.return()}finally{if(a)throw g}}return e._runesMasteriesRequest({endUrl:i.join(",")+"/runes",region:t},u)}):"string"==typeof a?this.getSummoner({name:a,region:t},function(r,n){return e._runesMasteriesRequest({endUrl:n[e._sanitizeName(a)].id+"/runes",region:t},u)}):this._runesMasteriesRequest({endUrl:g+"/runes",region:t},u)}},{key:"getMasteries",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},r=(e.regions,e.ids),t=e.id,i=arguments[1];if(!r&&!t)return this._logError(this.getMasteries.name,"required params "+n.yellow("`ids` (array of ints)")+" or "+n.yellow("`id` (int)")+" not passed in");var o=void 0;return l.int(r)&&(o=r.join(",")),Number.isInteger(r)&&(o=[r]),t&&!Number.isInteger(t)&&(o=[t]),this._runesMasteriesRequest({endUrl:o+"/masteries",region:region},i)}}]),e}();e.exports=d});